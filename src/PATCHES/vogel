From vogel@c17igpb.wpafb.af.mil Tue Mar 17 16:10:10 1992
Received: from c-17igp.wpafb.af.mil by immd4.informatik.uni-erlangen.de with SMTP;
	id AA01960 (5.64+/7.3l-FAU); Tue, 17 Mar 92 16:08:52 +0100
Received: from c17igpb.wpafb.af.mil by c-17igp.wpafb.af.mil (5.61/3.14)
	id AA25947; Tue, 17 Mar 92 10:09:10 -0500
Date: Tue, 17 Mar 92 10:08:50 -0500
From: vogel@c17igpb.wpafb.af.mil (Contr Karl Vogel)
Return-Path: <vogel@c17igpb.wpafb.af.mil>
Message-Id: <9203171508.AA10183@c17igpb.wpafb.af.mil>
Received: by c17igpb.wpafb.af.mil (5.61/3.14)
	id AA10183; Tue, 17 Mar 92 10:08:50 -0500
To: jnweiger@immd4.informatik.uni-erlangen.de
Subject: Porting screen to the Pyramid
Organization: Control Data Corporation
Status: OR

Mr Weigert:

   	I've ported screen 3.2 to the Pyramid, and I'm enclosing some small
	patches along with a config.h file.  This program is great!

---
Karl Vogel            Internet:   vogel@c-17igp.wpafb.af.mil  [129.48.19.253]
Control Data Corp.        UUCP:   ...!uunet!c-17igp.wpafb.af.mil!vogel
1-513-255-7383                    vogel%c-17igp.wpafb.af.mil@uunet.uu.net

A countryman between two lawyers is like a fish between two cats.
						--Benjamin Franklin

==============================================================================

#!/bin/sh
# This is a shell archive (produced by shar 3.49 90/09/12)
# To extract the files from this archive, save it to a file, remove
# everything above the "!/bin/sh" line above, and type "sh file_name".
#
# made 03/17/1992 14:42 UTC by vogel@c17igpb
# Source directory /d/cdc/source/screen-3.2
#
# existing files will NOT be overwritten unless -c is specified
#
# This shar contains:
# length  mode       name
# ------ ---------- ------------------------------------------
#   1329 -rw-r--r-- patch.fileio
#    446 -rw-r--r-- patch.screen
#   9173 -rw-r--r-- config/config.pyramid
#
# ============= patch.fileio ==============
if test -f 'patch.fileio' -a X"$1" != X"-c"; then
	echo 'x - skipping patch.fileio (File already exists)'
else
echo 'x - extracting patch.fileio (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'patch.fileio' &&
*** fileio.c.orig	Fri Feb 14 20:06:57 1992
--- fileio.c	Mon Mar 16 19:03:52 1992
***************
*** 2542,2547 ****
--- 2542,2548 ----
X  }
X  
X  #ifdef BUGGYGETLOGIN
+ #ifdef BSD
X  char *
X  getlogin()
X  {
***************
*** 2550,2555 ****
--- 2551,2592 ----
X  # undef utmp
X  #endif
X    struct utmp u;
+   static char retbuf[sizeof(u.ut_name)+1];
+   int fd;
+ 
+   for (fd = 0; fd <= 2 && (tty = ttyname(fd)) == NULL; fd++)
+     ;
+   if ((tty == NULL) || ((fd = open(UTMP_FILE, O_RDONLY)) < 0))
+     return NULL;
+   tty = stripdev(tty);
+   retbuf[0] = '\0';
+   while (read(fd, &u, sizeof(struct utmp)) == sizeof(struct utmp))
+     {
+       if (!strncmp(tty, u.ut_line, sizeof(u.ut_line)))
+ 	{
+ 	  strncpy(retbuf, u.ut_name, sizeof(u.ut_name));
+ 	  retbuf[sizeof(u.ut_name)] = '\0';
+ #ifndef pyr
+ 	  if (u.ut_type == USER_PROCESS)
+ 	    break;
+ #endif
+ 	}
+     }
+   close(fd);
+ 
+   return *retbuf ? retbuf : NULL;
+ }
+ 
+ #else  /* BSD not defined */
+ 
+ char *
+ getlogin()
+ {
+   char *tty;
+ #ifdef utmp
+ # undef utmp
+ #endif
+   struct utmp u;
X    static char retbuf[sizeof(u.ut_user)+1];
X    int fd;
X  
***************
*** 2573,2576 ****
X  
X    return *retbuf ? retbuf : NULL;
X  }
! #endif
--- 2610,2614 ----
X  
X    return *retbuf ? retbuf : NULL;
X  }
! #endif /* BSD */
! #endif /* BUGGYGETLOGIN */
SHAR_EOF
chmod 0644 patch.fileio ||
echo 'restore of patch.fileio failed'
Wc_c="`wc -c < 'patch.fileio'`"
test 1329 -eq "$Wc_c" ||
	echo 'patch.fileio: original size 1329, current size' "$Wc_c"
fi
# ============= patch.screen ==============
if test -f 'patch.screen' -a X"$1" != X"-c"; then
	echo 'x - skipping patch.screen (File already exists)'
else
echo 'x - extracting patch.screen (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'patch.screen' &&
*** screen.c.orig	Fri Feb 14 20:07:13 1992
--- screen.c	Mon Mar 16 18:45:03 1992
***************
*** 44,50 ****
X  #ifdef sgi
X  # include <sys/sysmacros.h>
X  #endif /* sgi */
! #if !defined(sun) && !defined(B43) && !defined(ISC)
X  # include <time.h>
X  #endif
X  /*
--- 44,50 ----
X  #ifdef sgi
X  # include <sys/sysmacros.h>
X  #endif /* sgi */
! #if !defined(sun) && !defined(B43) && !defined(ISC) && !defined(pyr)
X  # include <time.h>
X  #endif
X  /*
SHAR_EOF
chmod 0644 patch.screen ||
echo 'restore of patch.screen failed'
Wc_c="`wc -c < 'patch.screen'`"
test 446 -eq "$Wc_c" ||
	echo 'patch.screen: original size 446, current size' "$Wc_c"
fi
# ============= config/config.pyramid ==============
if test ! -d 'config'; then
    echo 'x - creating directory config'
    mkdir 'config'
fi
if test -f 'config/config.pyramid' -a X"$1" != X"-c"; then
	echo 'x - skipping config/config.pyramid (File already exists)'
else
echo 'x - extracting config/config.pyramid (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'config/config.pyramid' &&
/* Copyright (c) 1991
X *      Juergen Weigert (jnweiger@immd4.informatik.uni-erlangen.de)
X *      Michael Schroeder (mlschroe@immd4.informatik.uni-erlangen.de)
X * Copyright (c) 1987 Oliver Laumann
X *
X * This program is free software; you can redistribute it and/or modify
X * it under the terms of the GNU General Public License as published by
X * the Free Software Foundation; either version 1, or (at your option)
X * any later version.
X *
X * This program is distributed in the hope that it will be useful,
X * but WITHOUT ANY WARRANTY; without even the implied warranty of
X * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
X * GNU General Public License for more details.
X *
X * You should have received a copy of the GNU General Public License
X * along with this program (see the file COPYING); if not, write to the
X * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
X *
X * Noteworthy contributors to screen's design and implementation:
X *	Wayne Davison (davison@borland.com)
X *	Patrick Wolfe (pat@kai.com, kailand!pat)
X *	Bart Schaefer (schaefer@cse.ogi.edu)
X *	Nathan Glasser (nathan@brokaw.lcs.mit.edu)
X *	Larry W. Virden (lwv27%cas.BITNET@CUNYVM.CUNY.Edu)
X *	Howard Chu (hyc@hanauma.jpl.nasa.gov)
X *	Tim MacKenzie (tym@dibbler.cs.monash.edu.au)
X *	Markku Jarvinen (mta@{cc,cs,ee}.tut.fi)
X *	Marc Boucher (marc@CAM.ORG)
X *
X ****************************************************************
X * $Id$ FAU
X */
X
X
/*
X *		Beginning of User Configuration Section
X *
X * First off, you should decide if you intend to install screen set-uid to
X * root.  This isn't necessary to use screen, but it allows the pseudo-ttys
X * to be set to their proper owner (for security purposes), /etc/utmp to be
X * updated, and /dev/kmem to be accessed to read the load average values.
X *
X * An alternative to installing screen set-uid root is to install it set-gid
X * utmp (with the file /etc/utmp installed to be group-utmp writable) or
X * set-gid kmem (with /dev/kmem set to be group-kmem readable) or some other
X * custom group to give you both.  The final alternative is to omit /etc/utmp
X * updating and the /dev/kmem reading (see the following defines) and simply
X * run screen as a regular program -- its major functions will be unaffected.
X */
X
X
/*
X * Define PID_T_DEFINED if your <.../types.h> file has a typedef or
X * declaration for "pid_t".
X */
#define PID_T_DEFINED
X
/*
X * Define BSD and B43 if your system is close to BSD4.3.
X */
#define B43
#define BSD
X
#ifdef B43
# include <sys/time.h>
#endif
X
/*
X * Define INC_STRINGS if you use <strings.h> instead of <string.h>.
X */
#define INC_STRINGS
X
#ifdef INC_STRINGS
# include <strings.h>
#endif /* INC_STRINGS */
X
/*
X * Define POSIX if your system supports IEEE Std 1003.1-1988 (POSIX).
X */
#undef POSIX
X
/*
X * Define BSDJOBS if you have BSD-style job control (both process
X * groups and a tty that deals correctly with them).
X */
#define BSDJOBS
X
/*
X * Define TERMIO if you have struct termio instead of struct sgttyb.
X * This is usually the case for SVID systems, where BSD uses sgttyb.
X * POSIX systems should define this anyway, even though they use
X * struct termios.
X */
#undef TERMIO
X
/*
X * Define TERMINFO if your machine emulates the termcap routines
X * with the terminfo database.
X * Thus the .screenrc file is parsed for
X * the command 'terminfo' and not 'termcap'.
X */
#undef TERMINFO
X
/*
X * Define SYSV if your machine is SYSV complient (Sys V, HPUX, A/UX)
X */
#undef SYSV
X
/*
X * Define SIGVOID if your signal handlers return void.  On older
X * systems, signal returns int, but on newer ones, it returns void.
X */
#undef SIGVOID 
X
/*
X * Define DIRENT if your system has <dirent.h> instead of <sys/dir.h>
X */
#undef DIRENT
X
/*
X * If screen is going to be installed set-uid root, you MUST define SUIDROOT.
X */
#undef SUIDROOT
X
/*
X * If screen is installed with permissions to update /etc/utmp (such as if
X * it is installed set-uid root), define UTMPOK.  Set LOGINDEFAULT to one (1)
X * if you want entries added to /etc/utmp by default, else set it to zero (0).
X */
#define UTMPOK
#define LOGINDEFAULT	1
X
/*
X * If your system has getutent(), pututline(), etc. to write to the
X * utmp file, define GETUTENT.
X */
#undef GETUTENT
X
/*
X * Define UTHOST if the utmp file has a host field.
X */
#define UTHOST
X
/*
X * If UTMPOK is defined and your system (incorrectly) counts logins by
X * counting non-null entries in /etc/utmp (instead of counting non-null
X * entries with no hostname that are not on a pseudo tty), define USRLIMIT
X * to have screen put an upper-limit on the number of entries to write
X * into /etc/utmp.  This helps to keep you from exceeding a limited-user
X * license.
X */
#define USRLIMIT 120
X
/*
X * If ttyslot() breaks getlogin() by returning indexes to utmp entries of
X * type DEAD_PROCESS, then our getlogin() replacement should be selected by
X * defining BUGGYGETLOGIN
X */
#define BUGGYGETLOGIN
X
#ifdef BUGGYGETLOGIN
# define UTMP_FILE "/etc/utmp"
#endif /* BUGGYGETLOGIN */
X
/*
X * If screen is NOT installed set-uid root, screen can provide tty security
X * by exclusively locking the ptys.  While this keeps other users from
X * opening your ptys, it also keeps your own subprocesses from being able
X * to open /dev/tty.  Define LOCKPTY to add this exclusive locking.
X */
#undef LOCKPTY
X
/*
X * If your system does not have the calls setreuid() and setregid(), define
X * NOREUID to force screen to use a forked process to safely create output
X * files without retaining any special privileges.  (Output logging will be
X * disabled, however.)
X */
#undef NOREUID
X
/*
X * If you want the "time" command to display the current load average
X * you must install screen with the needed privileges to read /dev/kmem
X * and have a load average format that screen understands.  We handle the
X * following formats:  3 doubles (BSD), 3 longs (sun), and 4 longs (alliant).
X */
#undef  LOADAV_3DOUBLES
#define LOADAV_3LONGS
#undef  LOADAV_4LONGS
X
/*
X * If your system has the new format /etc/ttys (like 4.3 BSD) and the
X * getttyent(3) library functions, define GETTTYENT.
X */
#undef GETTTYENT
X
/*
X * If your version of NFS supports named sockets and you install screen
X * suid root, you may need to define NFS_HACK for screen to be able to
X * open the sockets.
X */
#define NFS_HACK
X
/*
X * By default screen will create a directory named ".screen" in the user's
X * HOME directory to contain the named sockets.  If this causes you problems
X * (e.g. some user's HOME directories are NFS-mounted and don't support
X * named sockets) you can have screen create the socket directories in a
X * common subdirectory, such as /tmp or /usr/tmp.  It makes things a little
X * more secure if you choose a directory where the "sticky" bit is on, but
X * this isn't required.  Screen will name the subdirectories "S-$USER"
X * (e.g /tmp/S-davison).
X * Do not define TMPTEST unless it's for debugging purpose.
X * If you want to have your socket directory in "/tmp/screens" then
X * define LOCALSOCKDIR and change the definition of SOCKDIR below.
X */
#undef LOCALSOCKDIR
X
#ifdef LOCALSOCKDIR
# ifndef TMPTEST
#  define SOCKDIR "/tmp/screens"
# else
#  define SOCKDIR "/tmp/testscreens"
# endif
#endif
X
/*
X * Define USEBCOPY if the bcopy() from your system's C library supports the
X * overlapping of source and destination blocks.  When undefined, screen
X * uses its own (probably slower) version of bcopy().
X */
#undef USEBCOPY
X
/*
X * If you'd rather see the status line on the first line of your
X * terminal rather than the last, define TOPSTAT.
X */
#undef TOPSTAT
X
/*
X * If your system has vsprintf() and requires the use of the macros in
X * "varargs.h" to use functions with variable arguments,
X * define USEVARARGS.
X */
#define USEVARARGS
X
/*
X * Define this if your system supports named pipes.
X */
#define NAMEDPIPE
X
/*
X * here come the erlangen extensions to screen:
X * define LOCK if you want to use a lock program for a screenlock.
X * define PASSWORD for secure reattach of your screen.
X * define COPY_PASTE to use the famous hacker's treasure zoo.
X * define POW_DETACH to have a detach_and_logout key.
X * define REMOTE_DETACH (-d option) to move screen between terminals.
X * (jw)
X */
#define LOCK
#define PASSWORD
#define COPY_PASTE
#define REMOTE_DETACH
#define POW_DETACH
X
/*
X * As error messages are mostly meaningless to the user, we
X * try to throw out phrases that are somewhat more familiar
X * to ...well, at least familiar to us NetHack players.
X */
#define NETHACK
X
/*
X * and another sneaky feature: screen sources two startup files.
X * first a global file with a path specified here, second
X * your local $HOME/.screenrc
X * Don't define this, if you don't want it.
X */
#define ETCSCREENRC "/usr/local/lib/screenrc"
X
/*
X * if your system does not come with a putenv()/getenv() functions, 
X * you may bring in our own code by defining NEEDSETENV *and* adding 
X * putenv.c to your Makefile.
X */
#define NEEDSETENV
X
/*
X * If you are on a SYS V machine that restricts filename length to 14 
X * characters, you may need to enforce that by:
X *
X * #ifndef NAME_MAX
X * # define NAME_MAX 14
X * #endif
X */
X
X
/*
X *	End of User Configuration Section
X */
SHAR_EOF
chmod 0644 config/config.pyramid ||
echo 'restore of config/config.pyramid failed'
Wc_c="`wc -c < 'config/config.pyramid'`"
test 9173 -eq "$Wc_c" ||
	echo 'config/config.pyramid: original size 9173, current size' "$Wc_c"
fi
exit 0

