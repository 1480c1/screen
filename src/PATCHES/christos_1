From christos@guillemin.EE.CORNELL.EDU Tue Feb 18 00:45:00 1992
Received: from GUILLEMIN.EE.CORNELL.EDU by immd4.informatik.uni-erlangen.de  with SMTP (5.64+/7.3a-FAU)
	id AA26844; Tue, 18 Feb 92 00:44:51 +0100
Received: by guillemin.EE.CORNELL.EDU (5.65+IDA-1.3.5+christos-1/1.6.10+n-y-Cornell-Electrical-Engineering)
	id AA21363; Mon, 17 Feb 92 18:44:30 -0500
Message-Id: <9202172344.AA21363@guillemin.EE.CORNELL.EDU>
From: christos@EE.CORNELL.EDU (Christos S. Zoulas)
Date: Mon, 17 Feb 1992 18:44:29 -0500
In-Reply-To: "Juergen Weigert (Inf4 - hiwi)" <jnweiger@immd4.informatik.uni-erlangen.de>
       "Re: Gcc messages while compiling screen" (Feb  7,  8:36pm)
Reply-To: Christos S. Zoulas <christos@ee.cornell.edu>
Organization: Cornell University, Electrical Engineering, Ithaca NY 14853
X-Address: 389 Engineering and Theory Center
X-Phone: (607) 255 0302
X-Fax: (607) 255 9072
X-Face:  %jL.CVv-*"-d?@xSu)#i[QzHK3,c?Qx,G.u#bZ;O'qSg"$LmB})v;&A"6r&;#2NRahSRwYl
 D9Y8"L97FX^O7oBy?'hA6-1AQA`L(c[yqZySfl/t&4;gHT1|X\ElkgxMV<G<Wl4Bw[Y^/8]X@>NUjM
 /A)InAN\hPuhymGG{1&&ay2c"[4z_*Gb?{gbnv5+?terjcRFl`(^3vO-^Mw%\Cfk`p{@!a3&/NR#*p
 <c]7@{DT)R_*g4#M@G98-f$hN#J<pnDfR:xx<ph,7HcR3TeE|G~&}*>fH0rostE1
X-Mailer: Mail User's Shell (7.2.3 5/22/91)
To: "Juergen Weigert (Inf4 - hiwi)" <jnweiger@immd4.informatik.uni-erlangen.de>
Subject: Screen3.2 bug
Status: OR

Hello again,

NFS_HACK did not work very well with screen3.2... The sockets
were not getting removed and detach did not work without manually
changing the mode of the socket.

The problem is that you must become the user everytime you try to
remove or chmod the socket. As the proud initial author of the
NFS_HACK patch :-) [Just kidding I actually feel ashamed about the
mess of setreuid, setregid calls], I hereby present the following
even worse patch:

I think that in order to make sure that screen is secure, we need to
develop a policy about placing setreuid calls in the code. I think that the
NFS_HACK stuff is becoming really messy and I am not even sure I
am doing the right thing any more... I think that the NFSunlink idea
is better, at least it centralizes a bit the setreuid, setregid calls.
I think that the implementation of NFSunlink sucks a bit, because it
does not really save/restore the uids it got. It might be better to:

#ifdef NFS_HACK
    rest = 0;
    if (eff_uid == geteuid()) {
	(void) setreuid(eff_uid, real_uid);
	rest = 1;
    }
#endif
   ret = unlink(fname);
#ifdef NFS_HACK
   if (rest) 
	(void) setreuid(real_uid, eff_uid);
#endif
	
I am not sure anymore... Nevertheless the patches below work...

christos


*** extern.h.dist	Sun Feb  2 20:27:41 1992
--- extern.h	Mon Feb 17 18:27:12 1992
***************
*** 140,145 ****
--- 140,146 ----
  #endif
  
  extern char *Filename __P((char *));
+ extern int NFSunlink __P((char *));
  extern char *MakeTermcap __P((int));
  extern char *ProcessInput __P((char *, int *, char *, int *, int));
  extern char *SaveStr __P((char *));
*** screen.c.dist	Fri Feb  7 12:59:05 1992
--- screen.c	Mon Feb 17 18:25:33 1992
***************
*** 1643,1649 ****
    if (ServerSocket != -1)
      {
        debug1("we unlink(%s)\n", SockPath);
!       (void) unlink(SockPath);
      }
    Kill(AttacherPid, SIG_BYE);
    exit(i);
--- 1643,1649 ----
    if (ServerSocket != -1)
      {
        debug1("we unlink(%s)\n", SockPath);
!       (void) NFSunlink(SockPath);
      }
    Kill(AttacherPid, SIG_BYE);
    exit(i);
***************
*** 1659,1665 ****
    if (ServerSocket != -1)
      {
        debug1("we unlink(%s)\n", SockPath);
!       (void) unlink(SockPath);
      }
    exit(e);
  }
--- 1659,1665 ----
    if (ServerSocket != -1)
      {
        debug1("we unlink(%s)\n", SockPath);
!       (void) NFSunlink(SockPath);
      }
    exit(e);
  }
***************
*** 3810,3816 ****
--- 3810,3822 ----
    RestoreLoginSlot();
  #endif
    freetty();
+ #ifdef NFS_HACK
+   setreuid(eff_uid, real_uid);
+ #endif
    (void) chmod(SockPath, /* S_IFSOCK | */ 0600); /* Flag detached-ness */
+ #ifdef NFS_HACK
+   setreuid(real_uid, eff_uid);
+ #endif
      /*
       * tell father to father what to do. We do that after we
       * freed the tty, thus getty feels more comfortable on hpux
***************
*** 4010,4014 ****
--- 4016,4040 ----
        }
    *p = '\0';
    return buf;
+ }
+ 
+ /* 
+  * NFSunlink() is used to remove the sockets. This needs to be done
+  * when the sockets are on NFS filesystems where root maps to nobody.
+  */
+ int
+ NFSunlink(fname)
+   char *fname;
+ {
+   int ret;
+ 
+ #ifdef NFS_HACK
+   (void) setreuid(eff_uid, real_uid);
+ #endif
+   ret = unlink(fname);
+ #ifdef NFS_HACK
+   (void) setreuid(real_uid, eff_uid);
+ #endif
+   return ret;
  }
  
*** socket.c.dist	Fri Feb  7 12:59:05 1992
--- socket.c	Mon Feb 17 18:20:34 1992
***************
*** 123,129 ****
  {
    int s = 0, d;
  
!   (void) unlink(SockPath);
    s = MakeServerSocket();
    if (s != ServerSocket)
      {
--- 123,129 ----
  {
    int s = 0, d;
  
!   (void) NFSunlink(SockPath);
    s = MakeServerSocket();
    if (s != ServerSocket)
      {
***************
*** 274,280 ****
  	    {
                strcpy(SockNamePtr, foundsock[s].name);
  	      debug1("wiping '%d'\n", SockPath);
! 	      if (unlink(SockPath) == 0)
  	        {
  		  foundsock[s].mode = -2;
  	          wipecount++;
--- 274,280 ----
  	    {
                strcpy(SockNamePtr, foundsock[s].name);
  	      debug1("wiping '%d'\n", SockPath);
! 	      if (NFSunlink(SockPath) == 0)
  	        {
  		  foundsock[s].mode = -2;
  	          wipecount++;
***************
*** 443,449 ****
  	Msg(0, "It is not detached.");
        /* NOTREACHED */
      }
!   (void) unlink(SockPath);
    if (UserContext() > 0)
      {
  #if defined(_POSIX_SOURCE) && defined(ISC)
--- 443,449 ----
  	Msg(0, "It is not detached.");
        /* NOTREACHED */
      }
!   (void) NFSunlink(SockPath);
    if (UserContext() > 0)
      {
  #if defined(_POSIX_SOURCE) && defined(ISC)
***************
*** 547,553 ****
  	Msg(0, "It is not detached.");
        /* NOTREACHED */
      }
!   (void) unlink(SockPath);
  #ifndef NOREUID
    setreuid(eff_uid, real_uid);
    setregid(eff_gid, real_gid);
--- 547,553 ----
  	Msg(0, "It is not detached.");
        /* NOTREACHED */
      }
!   (void) NFSunlink(SockPath);
  #ifndef NOREUID
    setreuid(eff_uid, real_uid);
    setregid(eff_gid, real_gid);

